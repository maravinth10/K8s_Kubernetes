###first delete the existing resource group all the vms will be delete

#create a new resource group k8s1

##inside the resource group while launching your instance you need to select ubuntu20.04
then create the machine
login inside the vm 
# INSTALL cks-master
sudo -i
bash <(curl -s https://raw.githubusercontent.com/killer-sh/cks-course-environment/master/cluster-setup/latest/install_master.sh)
check the status of the master machine
kubectl get nodes
##then install another vm with ubuntu 20.04
sudo -i
bash <(curl -s https://raw.githubusercontent.com/killer-sh/cks-course-environment/master/cluster-setup/latest/install_worker.sh)

####finaly get the join command from the master machine and paste in the worker node
kubeadm token create --print-join-command
###then from the master machine we will create pod and see the communication betwen the pod
 8  kubectl run monitoring --image=nginx
    9  kubectl get pod -o wide
   10  kubectl run nginx --image=nginx
   11  kubectl get pod
   #the below command will not work as we need to create service in k8s
   12  kubectl exec nginx -- curl monitoring
   13  kubectl get pod -o wide
   ##this is the ip address of the montiroing pod it will work
   14  kubectl exec nginx -- curl 192.168.1.2
   15  kubectl get pod
   #we need to create service so that the dns resolution will work
   16  kubectl expose pod monitoring --port=80
   17  kubectl expose pod nginx --port=80
   18  kubectl exec nginx -- curl monitoring
