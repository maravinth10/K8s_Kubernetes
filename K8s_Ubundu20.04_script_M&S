###first delete the existing resource group all the vms will be delete

#create a new resource group k8s1

##inside the resource group while launching your instance you need to select ubuntu20.04
then create the machine
login inside the vm 
# INSTALL cks-master
sudo -i
bash <(curl -s https://raw.githubusercontent.com/killer-sh/cks-course-environment/master/cluster-setup/latest/install_master.sh)
check the status of the master machine
kubectl get nodes
##then install another vm with ubuntu 20.04
sudo -i
bash <(curl -s https://raw.githubusercontent.com/killer-sh/cks-course-environment/master/cluster-setup/latest/install_worker.sh)

####finaly get the join command from the master machine and paste in the worker node
kubeadm token create --print-join-command
###then from the master machine we will create pod and see the communication betwen the pod

--for users
  mkdir -p $HOME/.kube
  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
  sudo chown $(id -u):$(id -g) $HOME/.kube/config
--for admin
 export KUBECONFIG=/etc/kubernetes/admin.conf

--to check the discovery-token-ca-cert-hash 
openssl x509 -pubkey -in /etc/kubernetes/pki/ca.crt | openssl rsa -pubin -outform der 2>/dev/null | openssl dgst -sha256 -hex | sed 's/^.* //'

kubectl run monitoring --image=nginx
kubectl expose pod nginx --port=80
