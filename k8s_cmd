kubeadm init --pod-network-cidr=192.168.0.0/16

mkdir -p $HOME/.kube
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config

kubectl get ns
kubectl get nodes
kubectl get rs
kubectl get pods -o wide
kubectl get services
kubectl get deploy
crictl ps

kubectl logs -f food-nginx

kubectl get pod -A -o wide
kubeadm token create --print-join-command
curl -I 10.99.151.245
kubectl get nodes -o wide
kubectl get pods --all-namespaces -o wide
kubectl describe pod
kubectl describe nodes node2
kubectl edit deploy my-nginx
kubectl apply -f pod.yaml

kubectl run nginx --image=nginx
#the below command will not work as we need to create service in k8s
kubectl exec nginx -- curl monitoring
kubectl get pod -o wide
##this is the ip address of the montiroing pod it will work
kubectl exec nginx -- curl 192.168.1.2
#we need to create service so that the dns resolution will work
kubectl expose pod nginx --port=80
kubectl exec nginx -- curl monitoring
--pod log in
kubectl exec -it cart-nginx -- /bin/bash

--Deployment history
kubectl rollout history deployment nginx-expose
kubectl rollout history deployment nginx-expose --revision=1
--Deployment undo
kubectl rollout undo deployment nginx-expose
--Deployment undo specific version
kubectl rollout undo deployment nginx-expose --to-revision=2
--restart pods
kubectl rollout restart deployment grafana
--replace cmd 
kubectl get pod grafana-57dc5b9658-d5vpw -o yaml |kubectl replace --force -f -


kubectl run monitoring --image=nginx
kubectl expose pod nginx --port=80
   10  kubectl run nginx --image=nginx
   #the below command will not work as we need to create service in k8s
   12  kubectl exec nginx -- curl monitoring
   ##this is the ip address of the montiroing pod it will work
   14  kubectl exec nginx -- curl 192.168.1.2
   #we need to create service so that the dns resolution will work
   16  kubectl expose pod monitoring --port=80
   18  kubectl exec nginx -- curl monitoring


